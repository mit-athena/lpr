{ Remote Remote Procedure Call (rrpc) Interface

  This interface defines procedures exported by all RPC servers.  The
  implementation of this interface is in the server's runtime support
  (i.e. not part of the application server proper). }

[uuid(36ce399d4000.0d.00.00.c3.66.00.00.00), version(0)] 
interface rrpc_;

import 
    'nbase.idl',
    'rpc.idl';

const
    rrpc_$mod                   = 16#1C040000;  { RRPC module code }

    rrpc_$shutdown_not_allowed  = 16#1C040001;  { rrpc_$shutdown request denied }


type
    rrpc_$interface_vec_t =
        array[0..*] of rpc_$if_spec_t;

    {*
     * A vector of integer statistics returned by "rrpc_$inq_stats".  The
     * constants defined below define the meaning of the various elements
     * of the vector.
     *}

type
    rrpc_$stat_vec_t =
        array[0..*] of integer32;

const
    rrpc_$sv_calls_in       = 0;    { # of calls processed by server }
    rrpc_$sv_rcvd           = 1;    { # of pkts rcvd by server }
    rrpc_$sv_sent           = 2;    { # of pkts sent by server }
    rrpc_$sv_calls_out      = 3;    { # of calls made by server }
    rrpc_$sv_frag_resends   = 4;    { # of frag sends that were dups of previous send }
    rrpc_$sv_dup_frags_rcvd = 5;    { # of duplicate frags rcvd }

    rrpc_$sv_n_calls        = rrpc_$sv_calls_in;    { Retained for compatibility }
    rrpc_$sv_n_pkts_rcvd    = rrpc_$sv_rcvd;        { Retained for compatibility }
    rrpc_$sv_n_pkts_sent    = rrpc_$sv_sent;        { Retained for compatibility }


{   R R P C _ $ A R E _ Y O U _ T H E R E
    
    A trivial procedure to check to see if a server is answering requests. }

[idempotent] 
procedure rrpc_$are_you_there(
            in h:           handle_t;
            out st:         status_$t
            );


{   R R P C _ $ I N Q _ S T A T S

    Return some interesting statistics. }

[idempotent] 
procedure rrpc_$inq_stats(
            in h:           handle_t;
            in max_stats:   unsigned32;
            out stats:      [max_is(max_stats), last_is(l_stat)] rrpc_$stat_vec_t;
            out l_stat:     integer32;
            out st:         status_$t
            );



{   R R P C _ $ I N Q _ I N T E R F A C E S

    Return a list of interfaces the server currently exports. }

[idempotent] 
procedure rrpc_$inq_interfaces(
            in h:           handle_t;
            in max_ifs:     unsigned32;
            out ifs:        [max_is(max_ifs), last_is(l_if)] rrpc_$interface_vec_t;
            out l_if:       integer32;
            out st:         status_$t
            );


{   R R P C _ $ S H U T D O W N

    Shutdown server.  N.B. Some servers may choose to not be shut-downable using
    this call. }

procedure rrpc_$shutdown(
            in h:           handle_t;
            out st:         status_$t
            );

end;

