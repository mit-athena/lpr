/* #	$Source: /afs/dev.mit.edu/source/repository/athena/bin/lpr/quota/Imakefile,v $
  #	$Author: epeisach $
  #	$Locker:  $
  #	$Header: /afs/dev.mit.edu/source/repository/athena/bin/lpr/quota/Imakefile,v 1.3 1990-11-15 19:34:38 epeisach Exp $
  #
  #
  #     Copyright 1990 Massachusetts Institute of Technology.
  #
  #     For copying and distribution information, see the file
  #     "mit-copyright.h".
*/

DESTDIR=

/* NDBM is now in config.h */
CFLAGS=-O -DHESIOD -DKERBEROS -DZEPHYR -DV1COMPAT ${OCFLAGS}\
		-I./ncs/include/idl -I. -I..
LIBS= ${OPTLIBFLAGS} ./ncs/nck/libnck.a  -lhesiod -lzephyr -lacl -lkrb \
	-ldes -lcom_err ${DBMLIB} ${POSTLIBFLAGS}
DBLIBS            = ${OPTLIBFLAGS} -lkrb ${DBMLIB} ${POSTLIBFLAGS}

#if defined(ultrix)
#if defined(ULTRIX40)
OCFLAGS=-DUltrix40
#else
DBMLIB=-ldbm
#endif
#endif

#if defined(_AUX_SOURCE) 
DBMLIB=-ldbm
#endif

#ifdef i386
OPTLIBFLAGS=-L/usr/athena/lib 
POSTLIBFLAGS=-lbsd
#endif

NIDL=./ncs/nidl/nidl
NIDLOPTS=-idir ./ncs/include/idl -m
.SUFFIXES: .idl .h
COMPILE_ET=/usr/athena/compile_et


#if defined(_AUX_SOURCE) 
.c.o:
	 $(CC) -tp -Bncs/cpp/ -c $(CFLAGS) $*.c
#endif
#if defined(i386)
.c.o:
	 $(CC) -q -Bncs/cpp/ -c $(CFLAGS) $*.c
#endif


.idl.h:
	$(NIDL) $*.idl $(NIDLOPTS)


SRCS=	gquota_dba.c uid_strings.c \
	qmain.c quota_dba.c quota_ncs_sstub.c quota_server.c quotacap.c \
	server_krb.c quota_notify.c quota_logger.c strings.c parser.c \
	journal.c user.c periodic.c logger_ncs_sstub.c logger_server.c \
	${V1SRC}

OBJS=	qmain.o quota_dba.o quota_ncs_sstub.o quota_server.o quotacap.o \
	server_krb.o quota_notify.o quota_logger.o strings.o parser.o \
	journal.o user.o periodic.o logger_ncs_sstub.o logger_server.o \
	gquota_dba.o uid_strings.o ${V1OBJ}

V1SRC=  quota_ncs_v1_sstub.c quota_server_v1.c \
	logger_ncs_v1_sstub.c logger_server_v1.c

V1OBJ=  quota_ncs_v1_sstub.o quota_server_v1.o \
	logger_ncs_v1_sstub.o logger_server_v1.o

CSRCS=	lpquota.c quota_ncs_cstub.c quota_ncs_cswtch.c quota_err.c \
	logger_ncs_cstub.c logger_ncs_cswtch.c printcap.c
COBJS=	lpquota.o quota_ncs_cstub.o quota_ncs_cswtch.o quota_err.o \
	logger_ncs_cstub.o logger_ncs_cswtch.o printcap.o

LSRCS=  quota_dba.c gquota_dba.c qdb_create.c
LOBJS=  quota_dba.o gquota_dba.o qdb_create.o

SSRCS=  s_chkaf.c quota_ncs_cstub.c quota_ncs_cswtch.c printcap.c  
SOBJS=  s_chkaf.o quota_ncs_cstub.o quota_ncs_cswtch.o printcap.o quota_err.o

DBPROGS         = dump_db restore_db bill_db
DBGPROGS        = gdump_db grestore_db gbill_db
DBLPROGS	= dump_logs consist
DBPROGRAMS      = $(DBPROGS) $(DBGPROGS) ${DBLPROGS}

DBSRCS          = dump_db.c restore_db.c bill_db.c \
                  gdump_db.c grestore_db.c gbill_db.c \
                  quota_dba.c gquota_dba.c
DBOBJS          = dump_db.o restore_db.o bill_db.o \
                  gdump_db.o grestore_db.o gbill_db.o \
                  quota_dba.o gquota_dba.o


ALL=	lpqd lpquota qdb_create s_chkaf $(DBPROGRAMS) 

all:	./ncs/cpp/cpp ./ncs/nidl/nidl ./ncs/nck/libnck.a ${ALL} 

Makefile: Imakefile ../cppflags
	-mv -f Makefile Makefile.bak
	/lib/cpp `../cppflags` Imakefile Makefile 

./ncs/cpp/cpp:
	(cd ncs/cpp; make MFLAGS=$(MFLAGS) )

./ncs/nidl/nidl:
	(cd ncs/nidl; make MFLAGS=$(MFLAGS) )

./ncs/nck/libnck.a:
	(cd ncs/nck; make MFLAGS=$(MFLAGS) )

s_chkaf: ${SOBJS}
	${CC} -o s_chkaf ${SOBJS} ${LIBS}

lpqd:	${OBJS}
	${CC} -o lpqd ${OBJS} ${LIBS} 

lint_lpqd: ${SRCS}
	lint -u ${CFLAGS}  ${SRCS}

saber_lpqd:
	\#load ${CFLAGS} ${SRCS} ${LIBS}

saber_lpquota:
	\#load ${CFLAGS} ${CSRCS} ${LIBS}

lpquota: ${COBJS}
	${CC} -o lpquota ${COBJS} ${LIBS}

dump_logs: dump_logs.o journal.o user.o parser.o strings.o
	${CC} -o dump_logs dump_logs.o journal.o user.o parser.o strings.o \
			${LIBS}

consist: consist.o journal.o user.o strings.o
	${CC} -o consist consist.o journal.o user.o strings.o ${LIBS}

dump_user: dump_user.o user.o strings.o
	${CC} -o dump_user dump_user.o user.o strings.o ${LIBS}

lint_lpquota:
	lint -u ${CFLAGS} lpquota.c 

lint_s_chkaf:
	lint -u ${CFLAGS} s_chkaf.c

qdb_create: ${LOBJS}
	${CC} -o qdb_create ${LOBJS} ${LIBS}


dump_db: quota_dba.o dump_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o dump_db dump_db.o quota_dba.o $(DBLIBS)
restore_db: quota_dba.o restore_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o restore_db \
		restore_db.o quota_dba.o $(DBLIBS)
bill_db: quota_dba.o bill_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o bill_db bill_db.o quota_dba.o $(DBLIBS)

gdump_db: gquota_dba.o gdump_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o gdump_db \
		gdump_db.o gquota_dba.o $(DBLIBS)
grestore_db: gquota_dba.o grestore_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o grestore_db \
		grestore_db.o gquota_dba.o $(DBLIBS)
gbill_db: gquota_dba.o gbill_db.o
	$(CC) $(LDFLAGS) $(CFLAGS) -o gbill_db \
		gbill_db.o gquota_dba.o $(DBLIBS)

dump_db: dump_db.o
gdump_db: gdump_db.o
restore_db: restore_db.o
grestore_db: grestore_db.o
bill_db: bill_db.o
gbill_db: gbill_db.o


install:
	install -s -c lpquota ${DESTDIR}/usr/athena/lpquota
	install -s -c lpqd ${DESTDIR}/usr/etc/lpqd
	install -s -c s_chkaf ${DESTDIR}/usr/etc/s_chkaf

clean:
	rm -f quota_ncs_sstub.c quota_ncs_cswtch.c quota_ncs_cstub.c \
	   logger_ncs_sstub.c logger_ncs_cswtch.c logger_ncs_cstub.c \
	   logger_ncs.h quota_ncs.h quota_err.[ch] *.o *~ ${ALL} \
	   x.c printcap.c \
	   quota_ncs_v1_sstub.c quota_ncs_v1_cswtch.c quota_ncs_v1_cstub.c \
	   logger_ncs_v1_sstub.c logger_ncs_v1_cswtch.c logger_ncs_v1_cstub.c \
	   logger_ncs_v1.h quota_ncs_v1.h nidl_structs.h \
	   nidl_structs_sstub.c nidl_structs_cstub.c nidl_structs_cswtch.c \
	   $(DBOBJS) $(DBPROGRAMS)

depend: ${SRCS} ${CSRCS} ${LSRCS}
	touch Make.depend; mkdep -fMake.depend ${CFLAGS} ${SRCS} \
	${CSRCS} ${LSRCS} ${DBSRCS}

printcap.c:
	rm -f printcap.c
	ln -s ../printcap.c 

quota_ncs_sstub.c: quota_ncs.h
quota_ncs_cstub.c: quota_ncs.h
quota_ncs_cswtch.c: quota_ncs.h
quota_ncs.h: quota_ncs.idl

lpquota.o: quota_ncs.h logger_ncs.h nidl_structs.h quota_err.h
logger_ncs_sstub.c: logger_ncs.h
logger_ncs_cstub.c: logger_ncs.h
logger_ncs_cswtch.c: logger_ncs.h
logger_ncs.h: logger_ncs.idl logger.h

quota_err.h quota_err.c:quota_err.et
	${COMPILE_ET} quota_err.et

qmain.o: quota_ncs.h logger_ncs.h quota_ncs_v1.h logger_ncs_v1.h  
quota_server.o: quota_err.h
parser.o: logger_ncs.h logger_ncs_v1.h
s_chkaf.o: quota_err.h quota_ncs.h

$(OBJS): config.h
/*####### For version_1 compatibility ########*/

quota_ncs_v1_sstub.c: quota_ncs_v1.h nidl_structs.h
quota_ncs_v1_cstub.c: quota_ncs_v1.h nidl_structs.h
quota_ncs_v1_cswtch.c: quota_ncs_v1.h nidl_structs.h 
quota_ncs_v1.h: quota_ncs_v1.idl nidl_structs.h

logger_ncs_v1_sstub.c: logger_ncs_v1.h logger_ncs_v1_sstub.c.save
	rm -f logger_ncs_v1_sstub.c
	cp logger_ncs_v1_sstub.c.save logger_ncs_v1_sstub.c
logger_ncs_v1_cstub.c: logger_ncs_v1.h logger_ncs_v1_cstub.c.save
	rm -f logger_ncs_v1_cstub.c
	cp logger_v1_ncs_cstub.c.save logger_ncs_v1_cstub.c
logger_ncs_v1_cswtch.c: logger_ncs_v1.h logger_ncs_v1_cswtch.c.save
	rm -f logger_ncs_v1_cswtch.c
	cp logger_ncs_v1_cswtch.c.save logger_ncs_v1_cswtch.c
logger_ncs_v1.h: logger_ncs_v1.idl logger_ncs_v1.h.save logger.h
	rm -f logger_ncs_v1.h
	cp logger_ncs_v1.h.save logger_ncs_v1.h

