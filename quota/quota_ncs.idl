/* Hey, Emacs: this looks like -*- C -*- but isn't */
%c
[
uuid(48c2314d4009.02.12.48.00.63.00.00.00),
version(1),
port(ip:[3702])
]

interface print_quota {
    import "nbase.idl";
    import "base.idl";
/*    import "uuid.idl";*/

#include "quota_limits.h"

    /* Error return */
    typedef long quota_error_code;

    /* For authentication */
    typedef struct {
	int length;
	[last_is (length)] char dat[1250];
	unsigned long mbz;
    } krb_ktext;

    /* For quota_identfier */
    typedef long quota_account;
    typedef string0 [MAX_K_NAME_SZ] quota_username;
    typedef string0 [SERV_SZ] quota_service;

    /* For quota_report */
    typedef long printed_pages;
    typedef long media_cost;
    typedef string0 [PNAME_SZ] printer_name;
    typedef long print_time;

    /* For quota_return */
    typedef long quota_value;
    typedef string0 [CURRENCY_SZ] quota_currency;
    typedef string0 [MESSAGE_SZ]  quota_message;
    typedef long billing_time;

    /* For QuotaModifyUser */
    typedef enum { U_NEW, U_SET, U_ADD, U_SUBTRACT, U_DELETE, U_ALLOW_PRINT, 
		       U_DISALLOW_PRINT, U_ADJUST } modify_user_type;

    /* For QuotaModifyAccount */
    typedef enum { A_NEW, A_SET, A_ADD, A_SUBTRACT, A_DELETE, 
		       A_ALLOW_PRINT, A_DISALLOW_PRINT, A_ADJUST, 
		       A_SET_ADMIN, A_ADD_ADMIN, A_DELETE_ADMIN,
		       A_ADD_USER, A_DELETE_USER } modify_account_type;

    typedef struct {
	quota_username	username;
	quota_service	service;
	quota_account	account;
    } quota_identifier;

    typedef struct {
	printed_pages	pages;
	media_cost	pcost;
	printer_name	pname;
	print_time	ptime;
    } quota_report;
    
    typedef struct {
	quota_value	usage;
	quota_value	limit;
	quota_currency	currency;
	quota_message	message;
	billing_time	last_bill;
	quota_value	last_charge;	/* Last months billed amount */
	quota_value	pending_charge; /* How much is pending billing */
	quota_value	last_amount; 	/* Usage at time of last bill */
	quota_value	ytd_billed;
    } quota_return;

    typedef struct {
	quota_value	usage;
	quota_value	limit;
	quota_currency	currency;
	quota_message	message;
	billing_time	last_bill;
	quota_value	last_charge;
	quota_value	pending_charge;
	quota_value	last_amount;
	quota_value	ytd_charge;
    } quota_account_return;

    /* QuotaReport	
     *
     * krb_ktext	 
     * quota_identifier
     * quota_report
     * -->
     * cks	- for mutual authentication (ha!)
     */

    quota_error_code QuotaReport (
				  handle_t [in] h,
				  krb_ktext [in] *auth,
				  quota_identifier [in] *qid,
				  quota_report [in] *qreport,
				  unsigned long [out] *cksum);


    /* QuotaQuery 
     * 
     * krb_text
     * quota_identifier
     * -->
     * quota_return
     */

    quota_error_code QuotaQuery (
				 handle_t [in] h,
				 krb_ktext [in] *auth,
				 quota_identifier [in] *qid,
				 quota_return [out] *qreturn);

    /* QuotaModifyUser
     *
     * krb_text
     * quota_identifier
     * modify_user_type
     * quota_value
     * -->
     */

    quota_error_code QuotaModifyUser (
				      handle_t [in] h,
				      krb_ktext [in] *auth,
				      quota_identifier [in] *qid,
				      modify_user_type [in] qtype,
				      quota_value [in] qamount);

    /* QuotaModifyAccount
     *
     * krb_text
     * quota_account
     * modify_account_type
     * quota_identifier
     * quota_value
     * -->
     */

    quota_error_code QuotaModifyAccount(
					handle_t [in] h,
					krb_ktext [in] *auth,
					modify_account_type [in] qtype,
					quota_identifier [in] *qid,
					quota_value [in] qamount);
}

