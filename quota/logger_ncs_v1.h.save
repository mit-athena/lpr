#ifndef print_logger_v1_included
#define print_logger_v1_included
#include "idl_base.h"
#include "rpc.h"
#include "quota_ncs_v1.h"
#include "base.h"
#include "nidl_structs.h"
static rpc_$if_spec_t print_logger_v1$if_spec = {
  1,
  {0, 0, 3703, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
  1,
  {
  0x49c3f7aa,
  0x8d7d,
  0,
  0x2,
  {0x12, 0x48, 0x0, 0x68, 0x0, 0x0, 0x0}
  }
};
#define LO_ADD_V1 ((ndr_$ulong_int) 0x0)
#define LO_SET_V1 ((ndr_$ulong_int) 0x1)
#define LO_SUBTRACT_V1 ((ndr_$ulong_int) 0x2)
#define LO_DELETEUSER_V1 ((ndr_$ulong_int) 0x3)
#define LO_ALLOW_V1 ((ndr_$ulong_int) 0x4)
#define LO_CHARGE_V1 ((ndr_$ulong_int) 0x5)
#define LO_DISALLOW_V1 ((ndr_$ulong_int) 0x6)
#define LO_ADJUST_V1 ((ndr_$ulong_int) 0x7)
typedef ndr_$ulong_int logfunc_v1;
typedef struct LogEnt_v1 LogEnt_v1;
struct LogEnt_v1 {
recordtime time;
quota_username name;
quota_service service;
recordptr next;
recordptr prev;
struct  {
logfunc_v1 func;
union {
/* case(s): LO_ADD_V1, LO_SET_V1, LO_SUBTRACT_V1, LO_DELETEUSER_V1, LO_ALLOW_V1, LO_DISALLOW_V1, LO_ADJUST_V1 */
struct  {
quota_value amount;
quota_username wname;
} offset;
/* case(s): LO_CHARGE_V1 */
struct  {
print_time ptime;
printed_pages npages;
media_cost pcost;
printer_name where;
} charge;
} tagged_union;
} func_union;
};
extern  quota_error_code LoggerJournal
#ifdef __STDC__
 (
  /* [in] */handle_t h,
  /* [in] */krb_ktext *auth,
  /* [in] */quota_identifier *qid,
  /* [in] */startingpoint start,
  /* [in] */maxtotransfer maxnum,
  /* [in] */loggerflags flags,
  /* [out] */ndr_$long_int *numtrans,
  /* [out] */LogEnt_v1 LogEnts[100],
  /* [out] */quota_currency currency);
#else
 ( );
#endif
typedef struct print_logger_v1$epv_t {
quota_error_code (*LoggerJournal)
#ifdef __STDC__
 (
  /* [in] */handle_t h,
  /* [in] */krb_ktext *auth,
  /* [in] */quota_identifier *qid,
  /* [in] */startingpoint start,
  /* [in] */maxtotransfer maxnum,
  /* [in] */loggerflags flags,
  /* [out] */ndr_$long_int *numtrans,
  /* [out] */LogEnt_v1 LogEnts[100],
  /* [out] */quota_currency currency)
#else
()
#endif
;
} print_logger_v1$epv_t;
globalref print_logger_v1$epv_t print_logger_v1$client_epv;
globalref rpc_$generic_epv_t print_logger_v1$server_epv;
#endif
