/* Hey, Emacs: this looks like -*- C -*- but isn't */
/*
 * Copyright (c) 1990 by the Massachusetts Institute of Technology.
 * For copying and distribution information, see the file "mit-copyright.h."
 */

#include "mit-copyright.h"
%c
[
uuid(49c3f7aa8d7d.02.12.48.00.68.00.00.00),
version(1),
port(ip:[3703])
]

interface print_logger {
    import "quota_ncs.idl";
    import "base.idl";

#include "quota_limits.h"

    /* For LoggerJournal */
    typedef long startingpoint;
    typedef long maxtotransfer;
    typedef char loggerflags;
    typedef long recordtime;
    typedef long recordptr;

    typedef enum { LO_ADD, LO_SET, LO_SUBTRACT, LO_DELETEUSER, LO_ALLOW,
		   LO_CHARGE, LO_DISALLOW, LO_ADJUST } logfunc;

    typedef struct {
	recordtime time;
	quota_username 	name;
	quota_service 	service;
	recordptr	next;
	recordptr	prev;
	union switch (logfunc func) 
		{ case LO_ADD		:
		  case LO_SET		:
		  case LO_SUBTRACT	:
		  case LO_DELETEUSER	:
		  case LO_ALLOW		:	
		  case LO_DISALLOW	:	
		  case LO_ADJUST	:	
		      struct {
			  quota_value amount;
			  quota_username wname;
		      } offset;
		  case LO_CHARGE	:
		      struct {
			  print_time ptime;
			  printed_pages npages;
			  media_cost	pcost;
			  printer_name 	where;
		      } charge;
		  } func_union;
    } LogEnt;

    
    /* LoggerJournal
     *
     * krb_ktext
     * quota_identifier
     */

     quota_error_code LoggerJournal( 
				    handle_t [in] h,
				    krb_ktext [in] *auth,
				    quota_identifier [in] *qid,
				    startingpoint [in] start,
				    maxtotransfer [in] maxnum,
				    loggerflags [in] flags,
				    int [out] *numtrans,
				    [last_is(numtrans)] 
				       LogEnt [out] LogEnts[LOGMAXRETURN],
				    quota_currency [out] currency
				    );
}

