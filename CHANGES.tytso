Changes made to lpr/lpd system

Starred (*) items should get propagated back to Berkeley.

printjob.c	Changed abortpr so that the lock file is closed immediately,
		so that other lpd's can start printing other files.  Also, 30
		seconds after the output filters receive a SIGTERM, if
		they have not exited yet, abortpr sends them a SIGKILL
		to wipe them out.
		[tytso:19890114.2255EST]*

lpd.c		Changed MAX_ATHENA_SUBNET to be 18.141 instead of 18.92,
		so that mit-pika is included part of the "athena
		network", so that a hostname check is not necessary.
		We may want to dike out this code completely, and just
		let anybody in 18.*.*.* to print a file.... since anybody
		whose IP address resolves into a hostname can print
		a file anyway....
		[tytso:19890114.2228EST]

lpd.c		Instead of using the version of startdaemon found in 
		startdaemon.c, which opens a connection to lpd and sends
		it a command to start a printer daemon, use a version
		of startdaemon that forks a child which becomes the printer
		daemon, since a copy of lpd is running anyway....
		[tytso:19890114.2106EST]*

s_displayq.c	Instead of printing:

	"Printer daemon %d does not exist yet, try again in a few minutes",

		(This message is bogus, since it got the pid from
		the lock file, which meant that the daemon must
		have existed at one time to write the lock file
		in the first place.  Lose, lose)
		s_displayq attempts to start a new printer daemon.
		If it succeeds, it prints: 

	"Printer daemon %d does not exist; restarting a new one"

		If it fails, it prints:

	"Printer daemon $d does not exist; could not start a new one!"

		[tytso:19890113.2223EST]*


rmjob.c		Each control file in the spool directory is locked by
printjob.c	by printjob while it is being processed, and locked by
		rmjob before it is removed.  If printjob attempts to
		lock a control file and it is already locked, it defers
		processing the job until later (probably when it checks
		again, it will be gone.)  If rmjob attempts to lock a
		control file and it is already locked, it trys to kill
		the the currently active line printer daemon.  This fixes
		a race condition which caused the lpd to hang until
		it was forcibly restarted.
		[tytso:19890113.2107EST]*

(source 	Files in /source/4.3/usr.lib/lpr and in /source/4.3/ucb/lpr
directory)	were merged.  lpr, lpq, and lprm do not spool files into
		the spool directory but instead send files directly to
		lpd via the network.  s_lpr, s_lpq, and s_lprm are the 
		original versions which do access to the spool directory.
		[tytso:19890113.1630EST]
